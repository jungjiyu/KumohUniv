1. 이중포인터 매개변수일때, temp 역할 변수 선언이 단일 포인터 타입인거고, 활용할때는 변수만으로 활용하는거다 
	: 씨발 temp 를 함수 밖으로 가져갈 일이 있냐고

	// 단일 포인터 간의 값을 swap
	void swapS(char**c1, char**c2) { // c1 == &arg , *c1 == arg
		char* temp = *c1;  // temp == *c1 
		*c1 = *c2;
		*c2 = temp;
	}


2. 포인터 배열은 이중 포인터로 받아서 쓸 수 있다. 단일배열을 '&' 연산자 없이 쌩 포인터로 받는 것처럼 , 포인터 배열명에도 안 붙이고 하는거다
	: 포인터 배열명이 이미 포인터인 0번째 요소의 주소니까 ** 타입.
	int * pA[8];
	int **pP = pA;

3. 이차원 배열을 수정하는 함수
	: 매개변수 >> 이차원배열의 요소사이즈단위 로 포인터 연산하게 된다
		1. int p[ ][사이즈] <-- 가까운거 생략하는거임 주의
		2. int (*p)[사이즈] <-- 괄호 생략하면 안되는거 주의





