수업자료: 
https://dashing-debt-6ec.notion.site/2024-1-18e84bfd51354c7dab9ff6c56fbbd778

--------------------------------------------------------------------------------------------------------------------------------------
인트라넷 : 특정 그룹 규모의 network

인터넷 inter-net : (컴퓨터끼리 연결된) 전세계적규모의 "network"

www WordWideWeb : internet 기반의 서비스 중하나
	: web, w3 와 동의어
	: 핵심적인 3가지 기술
		(1) html
		(2) URL
		(3) HTTP
--------------------------------------------------------------------------------------------------------------------------------------
W3C WWW Consortium
	: 웹 표준 개발하는 국제 컨소시움(== 연합). 
	: 프로토콜, 가이드라인 개발

--------------------------------------------------------------------------------------------------------------------------------------
동적 페이지와 정적 페이지
	: 정적 페이지 >> 웹서버 차원에서 해결
		: html 파일, 이미지 ,..
	: 동적 페이지 >> WAS 까지 가서 해결
		: 공지사항 페이지, 로그인 페이지, ...
--------------------------------------------------------------------------------------------------------------------------------------
IP 와 PORT
	IP >> 호스트 구분용. (서버주소) 
	PORT >> 프로세스 구분용.  (서버내 위치)

--------------------------------------------------------------------------------------------------------------------------------------

URL Uniform Resource Locator
	: 자원 식별자 주소
	: 구성 ) 프로토콜 // 도메인:포트번호/contextPath/쿼리스트링
		: 프로토콜 ) HTTP , HTTPS , FTP같은
		: 도메인 ) ip 주소 외우기 어려우므로 ip 주소와 바인딩한 이름. 
			: 도메인을 이용해 request 하면 dns 서버가 그 도메인에 해당하는 ip 주소 반환한걸로 찾아가게됨
		: 쿼리스트링 ?var1=val1&var2=val2&var3=val3 .. 
			: ' ? ' 로 시작하고, 각 변수와 값은 = 로 바인딩되고, 각 쌍은 & 로 구분된다
			: get 방식으로 요청시 여기에 담겨서 옴

--------------------------------------------------------------------------------------------------------------------------------------


프락시 서버 
	: Proxy == 대리인
	: 대리 서버
	: 클라이언트와 서버 사이에서 데이터를 전달해주는 역할
	: 목적
		1. 캐시 데이터 사용하여 속도 향상
			: 일부 프록시 서버는 캐시를 저장해둬서 캐시 대한 요청은 서버까지 안가고 프록시 서버 차원서 끝낼 수 있어 시간 절약 가능. 또한 네트웤 병목 현상 방지 가능

		2. (서버입장의) 보안
			: (서버의) ip 를 숨길 수 있게 해줌

		3. (클라이언트의) 접속 우회
			: 자신의 ip 로 직접 접속하지 않고 프록시 서버를 거쳐 자신의 ip를 남기지 않음

		4. 필터링
			: 서버로 특정 엑세스만 허용 가능하게 필터링

Protocol
	: (통신) 규약.

HTTP Hyper Text Transfer Protocol
	: 패킷 주고받기 위한 통신 규약
	: 패킷이 바이너리 파일이 아니라 텍스트 파일 형태인 이ㅠ
		: 바이너리 파일의 경우 OS 마다 바이너리 파일이 다른 형식으로 만들어지는 경우가 있어서

--------------------------------------------------------------------------------------------------------------------------------------

클라이언트와 서버
	: 클라이언트와 서버는 패킷의 형태로 request, response 데이터를 중간에 프록시 서버를 끼고 주고 받는다.  
		: 클라이언트가 동적 페이지 요청한 경우 >> 웹서버는 웹 콘테이너에게 해당 request를 위임하여 비즈니스 로직 처리하게 하고, 처리된 페이지를 반환받아 클라이언트에게 response 한다
		: 클라이언트가 정적 페이지 요청 >> 웹 서버 차원에서 바로 해당 정적 웹페이지 찾고 response 해준다

--------------------------------------------------------------------------------------------------------------------------------------
웹 브라우져
	: 핵심 >> 보안. 표준, 속도
	: "미들웨어" 가 다중 브라우져 지원
		: 미들웨어 >> 중간에서 매개 역할을 하는 소ㅡㅍ트웨어. WAS 서버(웹서버 + 웹 컨테이너)를 의미.
	: 현재는 표준화가 많이 진행되었따
	: 대세 흐름
		1. netscape >> OS 떄문에 explorer 에게 패배
		2. internet explorer  >> 너무 구려서 Chrome 에게 패배. ( 보안도 취약하고( ActiveX 같은 경우 로컬에 직접 다운 받아야했음) , 속도도 느리고 )
			: 요즘엔 explorer 도 기존 구리던 체제 버리고 표준 맟춰 개발되어 예전보단 더 나아졌다
		3. Chrome >> 대세.

--------------------------------------------------------------------------------------------------------------------------------------



DTD Data Type Definition 
	: https://ly91.tistory.com/9
	: https://medium.com/@su_bak/web-dtd-document-type-definition-%EB%9E%80-1a1413771189
	: SGML 게열의 문서(HTML 등 ) 구조를 정의한 것
		: tag , attribute 와 그 값 , elemet 순서 등을 정의

	: DTD 를 따르는 문서를 valid 하다고 한다
	: DTD는 .dtd 확장자의 별도 파일에 "정의"되기도 하고, xml 파일에 "정의"되기도 한다

	: DTD 가 HTML 에서 "사용"되는 부분 
		: DTD를 반드시 선언해야 하는 이유는 DTD를 어떻게 선언하느냐에 따라 브라우저의 렌더링 모드가 바뀌게 되고 사용할 수 있는 태그와 속성이 바뀌게 되기 때문
		: HTML5 이전 >>  <!DOCTYPE html URL주손 >
			: SGML 기반이라 뒤에 DTD 참조 URL이 들어간다
			ex) <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">

		: HTML5 이후 >>  <!DOCTYPE html >
			: 브라우저에게 ‘이 문서가 html5 문서 형식을 따르고 있다’ 라고 알려주게 된다.
			: SGML 기반이 아니라 DTD 참조할 필요가 없다




XML eXtensible Markup Language
	: 문서의 "구조"를 "정의"하는 형식.
		: 그러니까 DTD 가 정의되어있다
		:  XML은 html 과 같은 "마크업 언어"를 정의하기 위한 메타 언어이다.
			: HTML에서 사용 가능한 태그(Tag)는 고정집합이다. 근본적으로 HTML의 태그는 고정되 있어, 사용자가 자신의 태그를 추가할 수 없다. 
			: XML로는 이란 태그를 사용자가 정의할 수 있으며, XML은 마크업 언어를 정의하기 위한 메타 언어라고 할 수 있다


트랜드
	1. SGML Standard Generalized Markup Language
		: 얘도 문서의 구조를 정의하는 얘였음. 근ㄴ데 양이 너무 방대함
		: HTML 이 얘를 기반으로 만들어진거임

	2. XML : SGML 을 간추린것
	3. JSON Java Script Object Notion


--------------------------------------------------------------------------------------------------------------------------------------

웹 앱 vs 네이티브 앱
	: 웹앱 >> 웹 기술 기반으로 앱 개발 한 것.  하나의 파일을 다양한 운영체제(IOS, Android) 에서 실행 가능
		: 대부분의 기업에서 사용. 저렴한 편

	: 네이티브앱 >> 특정 운영체제에 맞춰 개발한 것
		: 주로 대기업에서 함. 비싼편


-----------------------------------------------------------------------------------------------------------------------------
F12 개발자모드
	: 화살표 >> 가져다 댐 스펙 보여준다

W3 Shools 
	: - tutorial 탭에서 다양한 학습 가능

아이콘 다운로드
	sol 1. W3 school
	sol 2. google font

-----------------------------------------------------------------------------------------------------------------------------
인코딩 방식 
	ASCII >> 1바이트 . 7bit + 1bit(패리티비트)
	UTF-8 >> 유니코드 기반. 다양한 언어 지원

-----------------------------------------------------------------------------------------------------------------------------


Hyper Text 
	: 순차적이냐 관계 없이 다른 문서로 이동 시켜주는 텍스트

Markup Language
	: 뭐가 뭔지 표시하는 용도로 쓰이는 언어

HTML Hyper Text Markup Language
	: 하이퍼 텍스트 마크업 언어
	: 여러 버전이 있지만 그중 HTML4 (==XHTML)가 굉장히 중요
		: xml 을 도입하였지만, 너무 복잡해서 실패함 >> 현재의 HTML5 가 나옴.
	: HTML5
		: HTML5 의 주요 개발 원칙
			1. 외부 플러그인 최소화 << 보안 차원
			2. 오류 표시 기능 향상
			3. 장치 독립적 설계(다양한 기기 지원)
			4. 투명한 개발과정 공개
			5. HTML, CSS, DOM, JavaScript 기술에 기반을 둔다.

		: HTML5 신기능
			1. 오프라인에서도 가능 >> 게임 오프라인에서도 가능
			2. 위치정보제공 
			3. 웹소켓 api >> 양방향 통신

	: 태그 vs element 요소
		: element >> 태그 한 세트. 태그를 "활용"한 것.




--------------------------------------------------------------------------------------------------------------------------------------

