
vanilla JavaScript :  프레임워크 또는 라이브러리가 적용되지 않은 순수한 자바스크립트

cascading : 폭포, 계곡 같은거. 
	: 쥴쥴이 흐르는거
	: 스타일이 한군데서 나오는게 아니라 줄줄이 적용이 되서 최종스타일이 나오는거다

선택자 : 특정 요소들에 대한 스타일 규칙을 정의
	: https://iridescent-zeal.tistory.com/81
	: 기본선택자 종류
		1. 타입선택자 >> 특정 태그
			: html , body 같은 것도 선택자로 사용 가능
		2. 전체 선택자(universal selector) >> *
			: 해당 페이지 내의 모든 요소를 선
		3. 클래스 선택자(class selector) >> .클래스
			: 해당 페이지서 여러 요소에 적용 가능하능
			: 클래스 선택자로 정의된 스타일 규칙을 쓰기 위해선 해당 요소의 태그에 class="클래스명" 를 명시하면됨
				: 한 요소에 여러개의 클래스 스타일을 적용 가능하고 이 경우 각 클래스는 띄어쓰기로 구분하여 class="클래스명1 클래스명2 클래스명3.. " 이런식으로 쓴다
				: .클래스명이 아님을 주의

		4. 아이디 선택자(id selector)>> #id
			: 해당 페이지서 특정 요소 하나에만 적용 가능
			: 아이디 선택자로 정의된 스타일 규칙을 쓰기 위해선 해당 요소의 태그에 id="아이디명" 를 명시하면됨
				: #id 명이 아님을 주의

	: 복합선택자 종류
		1. 후손 선택자 (desendent combinator) >> 조상선택자 후손선택자
			: 띄어쓰기로 구분하여 태그명을 2개 명시한다
			: 조상, 후손태그 순서 암기 tip ) 어르신이 먼
			: 후손 관게) 그냥 대상 태그를 포함하고 있기만 하면 된다. 직접적으로 포함하고 있지 않아도 된다
			: https://aboooks.tistory.com/286#google_vignette

		2. 자식 선택자 (child combinator)>> 부모선택자 > 직계자식선택자
			: 자식 관게)  직접적으로 대상 태그를 포함하고 있어야된다

		3. 인접 형제 선택자(adjacent sibling combinator) >> 형제선택자1 + 형제선택자2
			: 형제 관계 ) 같은 수준의 요소. 그러니까 부모가 같은 요소
			: 같은 부모를 가지면서 형제선택자1 의 "바로" 뒤에 오는 "형제선택자2" 에 대하여 적용한다

		4. 일반 형제 선택자(general sibling combinator) >> 형제선택자1 ~ 형제선택자2
			: 같은 부모를 가지면서 형제선택자1 의 뒤에 오는 모든 "형제선택자2"에 대하여 적용한다


선택자 그룹 : 여러 선택자를 , 로 구분 하여 한번에 스타일 규칙을 적용하는것


의사 클래스(pseudo-class) 와 의사 요소(pseudo-element)
	: 참고로 교안상에는 의사 선택자라고 나와있는데 음 .. 혼자 못쓰이잖아. 난 이게 선택자라고 느껴지지 않는다
	: pseudo = 가상의 . 가짜의 
		: 의사 클래스는 가상 클래스. 가짜클래스 의 의미이다. 그러니까 실제 클래스는 아니지만(== 의사 클래스 단독으로 스타일 규칙을 정의할 순 없지만), (다른 선택자와 함꼐쓰이면) 클래스처럼 속성(스타일 규칙)을 정의할 수 있단 말이다

	: 의사 클래스, 의사 요소는 다른 선택자의 뒤에 명시하여 사용한다
		: 의사클래스, 의사 요소를 단독으로 선택자로 사용하여 스타일 규칙을 정의할순없다

	: 의사 클래스 != 의사 요소
		: 근데 인터넷에선 간혹 의사 요소를 의사 클래스라고 퉁치는 경우가 있는데 이는 잘못된 것이다
		: css1, css2 까지는 죄다 ':' 형태 밖에 없었는데 css3 부터는 '::'형태가 추가되었다. 이는 pesudo-element 와 pesudo-class 를 구분하기 위한 것이다

		의사 요소 >> 해당 요소에 특정 스타일을 추가한다.
			형태) ' :: ' 가 앞에 붙은 형태이다
			(1) ::before , ::after << 요소의 앞 , 뒤 부분에 특정 컨텐츠 추가
				:의사 요소와 함꼐 선언된 선택자의 스타일 규칙을 정의하는 부분에 content 속성을 명시하고, 특정 컨텐츠(문자열)을 할당한다
			(2) ::first-letter << 요소의 앞 글자의 스타일 정의
				: 따로 content 속성을 명시하진 않고, 걍 바로 첫글자 관련 설정한다


		의사 클래스 >> 해당 요소에 정의되어있는 스타일 규칙이 특정 상태를 만족할떄만 발현되게 한다
			형태) ' : ' 하나가 앞에 붙은 형태이다
			(1) :first-child << 첫번쨰 자식 요소에 한하여 발현되게 한다
			(2) :nth-child(n) << 요소의 n번째 자식에 한하여 발현되게 한다
				: 의사 클래스명인 nth-child 부분의 n은 실제로 n 쓰는거다
				: 괄호 내부에는 "숫자" 를 직접 쓰거나 "n을이용한식"을 쓰거나 "키워드"를 쓴다
					: 주의)  "n을이용한식" 은 상식적으로 동작하지 않는다
						: kn >> k 번쨰 자식 요소마다 적용
						: n + k >> k번째 자식 요소부터 쭉 적용
						: An+ B >> B번째 자식요소부터 A 번째 자식 요소마다 선택
							: A 는 음수가 될 수 있다. A가 음수일 경우 B번쨰 자식 요소를 기준으로 앞쪽으로 |A| 번째 자식 요소에 적용하게 된다 

					: 키워드 ) odd (홀수번쨰 자식 요소마다 적용), even(짝수번쨰 자식 요소마다 적용) 
			
					ex) 
					:nth-child(1) = 첫번째 선택
					:nth-child(2n+1) = 첫번째 요소부터 2번째 마다 선택

				: https://lalacode.tistory.com/6
				: 주의 n 은 0이 아닌 1부터 시작한다

			(3) :link << 아직 한 번도 해당 링크를 누르지 않은 상태에서 발현되게 한다
			(4) :visited << 한 번이라도 해당 링크를 누른 상태에서 발현되게 한다
			(5) :hover << 마우스 커서가 위에 올라가 있는 상태에서 발현되게 한다
			(6) :active << 마우스 커서가 클릭중인 상태에서 발현되게 한다
	
		의사클래스,요소를 연달아 특정 선택자에 적용하면 실제로 연달아 적용된다 . 그러니까 의사 클래스를 여러개 쓰면 해당 조건들을 모두 만족할떄만 발현된다




클래스 >> 부류
뇌피셜 >> # == 뭔가 순서적 . == 뭔가 객체 접근적

스타일 시트를 통해 유지보수성을 높일 수 있따. 컨텐트와 스타일을 분리할 수 있다

: 주석 헷갈려하지 말라


:before >> 해당 태그 사이의 모든 앞부분에 뭔갈 붙여준다
:before >> 해당 태그 사이의 모든 앞부분에 뭔갈 붙여준다

:link >> 아직 방문전인 하이퍼링크
:visited >>  방문된하이퍼링크


부모, 자식 앨리먼트
	: 바깥쪽 감싸는 엘리먼트 == 부모
	: 안쪽에 감쌈 당하는 엘리먼트 == 자식

css 의 상속
	: 부모 엘리먼트의 속성이 자식 엘리먼트에도 적용되는 것
	: 자식 엘리먼트에서 직접 지정한 스타일은 부모의 스타일에 대하여 우선순위를 가진다
	: 속성 중에는 상속이 안되는 것도 있는데, 강제 상속할 수도 있다
		: "자식" 앨리먼트에 style 속성에서 해당 속성명을 명시하고, 실제 값대신 inherit 를 대입함 된다
		: 뇌피셜이지만 편의성에 의해 상속 여부가 갈리는 것 같다

캐스캐이딩
	: 엘리먼트 간 css의 충돌을 피하기 위해 도입한 우선순위. 질서	
	: 기준
		1. 중요도 : css 가 선언된 위치가 어디인가
			(1) 브라우저의 css >> 별도로 css 를 설정 안했을때 브라우져서 설정한 기본적으로 적용되는 스타일
			(2) 저작자 css 일반선언 >> 그냥 개발자가 important 없이 선언한 스타일
				: 저작자 >> 게빌자

			(3) 저작자 css 의 important >> 개발자가 important 와 함께 선언한 스타일

		2. 명시도: 대상을 얼마나 명확하게 특정하ㅕㅆ는가
			(1) 타입 
			(2) 클레스
			(3) id
			(4) 인라인으로 직접 기술

		3. 소스 순서: css 선언을 나중에 할수록 우선순위가 높아짐
			: ex) 아래에서 p 태그에는 color = black 이 적용된다
				p{ color: green; }
				p{ color: black; }



https://www.w3schools.com/cssref/trysel.php
+ == next
~ == siblling. 같은 부모를 공유하는
태그명.클래스명 >> 특정 태그중 그 클래스를 갖는
[id] >> id 가 정해진 얘들ㄹ
ㅔ[


외부 스타일 시트: 많은 페이지에 동일한 스타일을 적용하려고 할 때 좋은 방법
	: import 하는 법
  <link type="text/css" rel="stylesheet" href="경로">

인라인 스타일 시트: 2개 이상의 선언이 있다면 반드시 끝에 ;을 적어 준다.

크롬 개발자 도구 쓰면 스타일이 뭐가 적용됬는지 알수 0

F2 >> 해당 이름을 한꺼번에 바꿔줌

