문서의 콘텐츠는 HTML 로 정의하고, 문서의 스타일은 CSS 를 이용하여 지정한다

CSS Cascading Style Sheet 
	: html 의 스타일을 정의하는 시트
	: 왜 필요한가? >>
		1. 컨텐츠와 스타일을 분리하여 관리할 수 있다
		2. 재사용하기 쉽다
		3. 유지 보수가 쉽다. 하나만 수정하면 되니까.

	: 종류 >> 스타일 시트의 내용이 어디 위치하느냐 따라 분류
		1. 인라인 스타일 : 태그 내부에 직접 표기
		2. 내부 스타일 :  html 문서의 style 태그 안에 명시
		3. 외부 스타일 :  .css 확장자의 파일에 작성하고, 이를 html 파일 내부의 <link> 태그로 연결하여 사용
			<link rel="stylesheet" href="파일명.css">
	: 문법
		선택자 { 
			속성1:값1;
			속성2:값2;
			. . .
			} 

	: 선택자 >> 말 그대로 html 요소를 선택하는 부분
		: 왜 유용한가? >> 여러 요소에 한번에 스타일의 지정이 가능
		: 종류
			1. 아이디 선택자 : "#아이디명"
			2. 클래스 선택자: ".클래스명"
			3. 타입 선택자 : "HTML요소명"
			4. 전체 선택자 : "*"
			5. 속성 선택자 
				(1)  "HTML요소명[특정속성명]" : 해당 HTML 요소가 특정속성을 가지기만 하면 해당 스타일을 적용시킨다
				(2) "HTML요소명[특정속성명=특정속성값]" : 해당 HTML 요소가 특정속성을 가지고, 특정속성값을 만족할떄 해당 스타일을 적용시킨다.

			6. 선택자 그룹 : 여러 선택자를 콤마로 나열하여 한꺼번에 지정하는 것

			7. 후손, 자식 , 형제 선택자 
				: 부모가 자식보다 앞에 오는거 , 형이 동생보다 앞에 오는거 주의
				(1) "s1 s2" : 후손 관계 >> s1 요소 내부에(바로 아래든 그그그그 아래든 ) 포함된 s2 요소를 "모두" 선택(최초만 선택이 아님)
				(2) "s1 > s2" : 자식 관계 >> s1 요소 바로 한단계 아래에 포함된 s2 요소를 "모두" 선택(최초만 선택이 아님) 
					: 기호 암기 tip >> 자식보다 부모가 더 크니까 "부모 > 자식"
			
				(3) s1 + s2 : 인접 형제 선택자 >> 같은 부모를 가지면서 s1 의 "바로" 뒤에 오는  (s1 바로 뒤에 연속으로 s2 가 오더라도) 최초의 "s2" 에 대하여만 적용한다
		
				(4) s1 ~ s2 : 일반 형제 선택자 >> 같은 부모를 가지면서 s1 의 뒤에 오는 모든 s2 에 대하여 적용한다. (최초만 선택이 아님) 
					: 기호 암기 tip >> ~ 는 좀 널널한 느낌.. + 는 좀 깐깐한 느낌. (교수님한테 + 달아달라고 하기 좀 까다로우니까)

			8. 의사 선택자 :
				: 의사 클래스, 의사 요소는 다른 선택자의 뒤에 명시하여 사용한다
					: 의사클래스, 의사 요소를 단독으로 선택자로 사용하여 스타일 규칙을 정의할순없다

				: 기호 암기 tip >> 요소 -->효소 -- >가루 많이 날린다. :: 이다.
 				(1) 의사 클래스 Pseudo Class : 기존 요소가 특정한 상태를 만족할떄만 발현되는 스타일 규칙을 정의한다
					형태) 앞에 : 가 붙은 형태
						1. :first-child << 최초의 자식 요소에 한하여 발현되게 한다
						2. :nth-child(n) << 요소의 n번째 자식에 한하여 발현되게 한다
							: 주의 ) "특정선택자:nth-child(n)" 이런식으로 쓰는 경우 "해당 태그의 n번쨰 자식"이란 의미가 아니라 n번째로 등장하는 "그" 태그의 의미가 된다. 특정선택자의 n번쨰 자식 요소를 택하게 하고 싶으면  "부모선택자 자식선택자:nth-child(n)" 의 형태로 부모와 자식 둘다 명시해야 n번쨰 자식요소를 택하게된다

							: 의사 클래스명인 nth-child 부분의 n은 찐으로 n 쓰는거다
							: 괄호 내부에 대입 가능한 값
								(1) 숫자 >> 1 부터 사용 가능하다
								(2) n을 이용한식
									: 어떤 형태의 식을 쓰느냐 따라 n 의 시작범위가 다르니 주의 >> 상수 부분 있을땐 n=0부터 시작, 상수 부분 없을떈 1 부터 시작. 
									1. kn >> k 번째 자식요소마다
										: 이때는 n=1,2,3 .. 이라고 봄 된다
									2. n + k >> k번째 자식 요소부터 쭉
										: 이때는 n =0,1,2,3 .. 이라고 봄 된다
									3. an + b>> b번째부터 a개 마다 선택
										: 이때는 n =0,1,2,3 .. 이라고 봄 된다
										: a 는 음수면  b 번째 부터 앞방향으로 a개 마다 이고, a가 양수면 b 번째부터 뒷 방향으로 a개마다 이다.

								(3) 키워드 
									1. odd >> 홀수 번째 자식 요소마다 적용
									2. even >> 짝수 번쨰 자식 요소마다 적용


				(2) 의사 요소 Pseudo element : 기존 요소에 특정 스타일을 추가한다
					형태 ) 앞에 :: 가 붙은 형태
						1. ::before , ::after << 요소의 앞, 뒤 부분에 특정 컨텐츠 추가 + 그 컨텐츠의 스타일 정의
							: content 속성을 명시하고, 특정 컨텐츠를 할당한다. 그리고 이와 함께 정의된 스타일은 해당 content 부분에만 적용된다.

						2. ::first-letter << 요소의 앞 글자의 스타일 정의
							: 따로 content 를 할당하는것 없이 첫 글자에 대한 스타일만 정의한다
					

	: 스타일 우선순위
		1. !important
		2. 더 나중에 정의될 수록) html 요소에 직접 명시 > html 파일의 style 태그 내부에 명시 > 연결 파일에 명시
 
