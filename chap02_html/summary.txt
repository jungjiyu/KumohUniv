이미지의 종류
- JPEG
    - 실사사진과 같이 복잡하고 많은 색상으로 이루어진 이미지에 적합
    - 손실 압축 방식을 사용한다.

- PNG
    - 무손실 압축 방식
    - 투명 배경을 지원해서 디자인이나 로고 파일로 많이 사용됨

- GIF
    - 256 색상만을 지원
    - 투명 배경과 애니메이션을 지원한다.




----------------------------------------------------------------------------------------------------------------------------
Hyper Text 
	: 순차적이냐 관계 없이 다른 문서로 이동 시켜주는 텍스트

Markup Language
	: 뭐가 뭔지 표시하는 용도로 쓰이는 언어

HTML Hyper Text Markup Language
	: 하이퍼 텍스트 마크업 언어
	: 여러 버전이 있지만 그중 HTML4 (==XHTML)가 굉장히 중요
		: xml 을 도입하였지만, 너무 복잡해서 실패함 >> 현재의 HTML5 가 나옴.
	: HTML5
		: HTML5 의 주요 개발 원칙
			1. 외부 플러그인 최소화 << 보안 차원
			2. 오류 표시 기능 향상
			3. 장치 독립적 설계(다양한 기기 지원)
			4. 투명한 개발과정 공개
			5. HTML, CSS, DOM, JavaScript 기술에 기반을 둔다.

		: HTML5 신기능
			1. 오프라인에서도 가능 >> 게임 오프라인에서도 가능
			2. 위치정보제공 
			3. 웹소켓 api >> 양방향 통신

	: html 태그는 그 요소의 의미를 markup하기 위해 적는거지, 그 태그의 표현 스타일을 이용하기 위해 적는게 아니다(그런건 css 이다)( 그러니까 표현 스타일 이용하겠다고 의미에 맞지 않는 태그 쓰면 안된다.)

	: 태그 ,  element 요소 , 속성 attribute
		: 태그 
			: <p> , </p> 같은거
			: html 에서 태그명 쓸때 대소문자 구분은 안해도,  대부분 소문자로 표기한다. 
			: 자식 태그, 부모 태그를 가질 수 있다
			: 시작, 종료 태그 사이의 연속된 공백은 하나의 공백으로 취급한다
				: 그러니까 스페이스 두번 쳐도 , 스페이스 한번 친걸로 취급된다
			: 속성 (attribute) 를  가질 수 있다
			: 태그 종류는 아래 본격적으로 정리함

		: 요소 element ) 태그 한 세트. 태그를 "활용"한 것.
			: 종류
				(1) block / inline 여부
					1. block element >> 한 줄을 다 차지(줄바꿈 일어남)
					2. inline element >> 그냥 낑김

				(2)  끝 태그 여부
					void element >> 끝 태그 없는 태그
				
		: 속성 attribute
			: 요소에 대한 추가적 정보를 제공한다
			: 값은 " " 로 대부분 할당한다 
				: ' ' 로도 묶어도 되고, 아예 안묶어도 되긴 한다

			: 대부분의 태그가 가지고 있는 속성

			:  속성의 종류
				(1). 열거 속성 Enumerated attribute : 할당할 수 있는 값이 정해진 속성
				(2). 불리언 속성 Boolean attributes : true, false 값만 할당 가능한 속성
				(3) 전역 속성 Global Attributes : 거의 모든 태그에서 사용 가능한 속성
					1. class >> 요소에 클래스 부여 
					2. id >> 요소에 아이디 부여 
					3. style >> 인라인 스타일 적용
					4. title >> 추가 정보 혹은 툴팁(==보조설명. 말풍선)으로 사용

	: 특수 문자
		&nbsp;
			: 공백문자
			: None Breaking SPace.

		&lt;
			: 왼쪽 꺽쇄(<) 
			: LefT

		&gt;
			: 오른쪽 꺽쇄(>)
			: riGhT

		&quot;
			: " 
			: QUOTation

		&amp
			: &
			: AMPersand

	: 태그 종류

		(-1) 기본적인
			: <!DOCTYPE html>
				: DTD Data Type Definition 을 html5 로 정의 
				: <html> 밖에 작성
			: <!-- -->
				: 주석

			: <html>
				: html 파일의 문서 전체(시작~ 끝)을 나타냄
				: 크게 내부 영역은 크게 <head>  와 <body> 로 구분됨

			: <head>
				:  html 문서 대한 정보를 정의한다 (= meta 데이터 담는 컨테이너)
				: 내부적으로 포함하는 태그들 << 이거 ㅇ이외엔 거의 다 <body> 태그의 ㅈ자식 태그로 쓰임
					1. <meta charset="utf-8">
						: 현재 html 파일의 인코딩 방식을 utf-8 로 정의한다
 					2. <title>
						: 탭에 표시할 문구 지정

			: <body>
				: html 문서의 본문 정의

		(0) non-sementic tag
			: 단순히 웹 사이트의 구조를 설계하는데 사용하는 태그
			: 스타일 지정이나 스크립팅 목적으로 필요한 경우를 제외하고는 non-sementic tag 가 아닌 sementic tag 를 사용하도록 하자.

			<div>
				: 대표적인 Block element 이다
				: DIVision 부서. 분할

			<span>	
				:대표적인 Inline element 이다
				: span == 표괄하다.

		(1) sementic tag 
			: https://seo.tbwakorea.com/blog/what-is-semantic-tag/
			: 태그명을 통한 역할 파악이 쉬우면서 <div>, <span>과 같이 웹 사이트의 구조를 설계하는데 쓰이는 태그
				: sementic == 의미론적인. 
				: 스타일 지정이나 스크립팅 목적으로 필요한 경우를 제외하고는 <div>와 같은 의미가 없는 요소나 속성을 사용하지 않아야 한다

			: 이점 
				1. 웹 사이트 검색할떄 필요한 내용을 정확하게 찾을 수 있게 함
					:ex) 본문 내용은 <header>,<footer> 태그가 아닌 <main> 태그 내에서 찾음

				2. 개발자의 코드 이해도가 높아짐
				3. 스크린 리더기가 정확히 읽음

			: 브라우져에 표시할 내용을 구분짓는 역할 하는거라 모두 body 내부에서 쓰인다. 

			< header >
				:헤더 영역(사이트 위에 있는 검색 창이나 메뉴바 같은거 있는곳), 그러니까 일종의 개요를 나타냄.
				: head 랑 다른 테그임 주의
					: head 는 메타 데이터를 대상으로 감싸는 태그고 , 필수적이며,  body 내부에 종속되어있지 않는다.

 
			< nav >  
				: 링크 거는 구간을 나타내기 위해 사용
					: <a>태그 같은거를 포함하게 된다.
				: NAVigation 의 약자

			<main> 
				: 핵심 콘텐츠(내용)이 들어있는 태그.
				: 웹 페ㅔ이지마다 똑같이 들어가는 정보가 아닌 웹 문서마다 다른 내용으로 구성이 된다
				: 한 문서에서 한번만 사용 가능

			<aside>
				:  사이드바 영역(왼 오 아래 바) 표기

			<footer>
				: 웹 문서 맨 아래쪽 콘텐츠 영역 표기

			 
			<article> 
				: 독립적인 콘텐츠를 표시하기 위해 사용하는 태그. 
					: 그러니까 뉴스 사이트에서 특정 기사 하나. 유튜브에서 특정 영상 하나 느낌
				: section 으로 대체 가능하긴 함( 컨텐츠 구분용으로 쓸 수 있긴 함)


			<section>
				: 서로 관계있는 콘텐츠를 분리해 표시하기 위해 사용하는 태그
					: 그러니까 서론 본문 결론 같은거 혹은 1장 2장 3장 같은거. 컨텐츠 목차 느낌.
				: article 으로 대체 가능하긴 함(콘텐ㅊ, 구분용으로)
				: article 로 각각의 컨텐츠를 구분짓고, 이 article 을 각각 section 으로 감싸서 article 간의 목차(?) 그런 느낌으로 관계를 나타낼 수 있다. 

	
		


		(2) 줄바꿈 관련
			<p>	
				: 문단을 표시하기 위해 사용.
				: 기본적으로 앞뒤 줄바꿈이 일어난다
				: Paragraph. 

			<pre>
				: html 파일에 입력한 그대로(== 엔터친거. 스페이스바 여러번 친것까지 반영해서!! ), 화면에 표시하는 태그
				: PREformatted text

			<br>
				: 강제 줄바꿈.
				: 딱히 끝 태그 없음
				: line BReak

		(3) 제목 관련
			<hn>
				: n = 1~ 6 까지의 숫자고( 작을수록 더 큼), 제목 표현 위해 쓰임
				: 기본적으로 앞뒤 줄바꿈 && 굵은 글자
				: Heading.

		(4) 텍스트 서식
			<b>
				: 볼드체
				: Bold
	
			<strong>
				: 강조 +볼드체
					: 강조의 의미가 추가되면
						1. 검색 엔진이 해당 부분을 중요한 부분으로 인식
						2. 스크린 리더기가 해당 부분을 강조하여 읽음 

			<i>
				: 이탤릭체
				: Italic

			<em>
				: 강조 + 이탤릭체
				: EMphasis

			<code>
				: 해당 부분이 소스코드임을 표시

	
			<sup> , <sub>
				: 위 첨자 아래첨자 표시

		(5) 수평선
			<hr>
				: 선 표시
				: Horizontal Rule

		(6) 리스트 : 항목을 나열하는데 사용
			<ol>
				: 순서있는 리스트 정의
				: 속성
					1. style ) 
						: list-style-type 속성에 다양한 값을 할당해 숫자 뿐 아니라 로마자 같은걸 기준으로 설정 가능
							: 그러니까 	<ol style="list-style-type:upper-alpha"> 같은거 가능하단거

						: list-style-type 속성에 할당 가능한 값
							1. upper-alpha >> 대문자 알파벳
							2. upper-roman >> 대문자 로마자
							3. decimal >> 정수

					2. start ) 시작 기준 설정 가능
						: style 이 숫자건 알파벳이건 로마자건 , start 는 숫자로 표현하는거 주의(1부터 시작)
						ex) 	<ol style="list-style-type:decimal" start="10">

				: Ordered List

			<ul>
				: 순서 없는 리스트 정의
				: Unordered List

			<li>
				: 리스트의 원소 정의
					: 순서 있건 없건 상관 없음

		(7) 이미지관련
			<img>
				: 속성
					1. src 
						:자원의 경로 할당

					2. alt
						: 사진 깨질 시 표시할 문구
						: ALTernate text

					3. width, height
						: 너비와 높이 지정
						: width 만 지정하면, 알아서 비율 맟춰주기 때문에 width 만 설정해주는게 좋다
						: px 값, % 값 모두 기준으로 할 수 있다
							: px >> 고정적
							: % 값 >> 브라우져 창 크기따라 가변적


		(8) 링크
			<a>
				: 하이퍼 링크 생성할 때 사용
				: 속성
					1.href 
						: 웹 페이지 경로 나타낸다
						: 경로 tip >> html 에서 경로 잡을 때 상대경로와 절대경로 2가지 모두 이용할 수 있다.
							: 절대 경로 >> 젤 앞에 "/"를 쓴다
 							: 상대경로 >> 젤 앞에 "/"를 안쓴다


					2. target
						: 새로운 페이지가 어떠한 방식으로 열릴지 지정
						: 할당 가능한 값
							1. "_blank"  : 새로운 탭에서 페이지를 연다
							2. "_self" : 현재 탭에서 페이지를 연다 (디폴트)

				: Anchor

		(9) 일반적인 표 관련 태그

			<table>
				: 표 table 정의
					: 표 >> row(=행=가로찍), column (=열=세로쿵) , cell(=셀=한칸) 으로 이루어진다

				: 예시
<a href="https://img.kr.news.samsung.com/kr/wp-content/uploads/2021/07/2021_2%EB%B6%84%EA%B8%B0_%EC%82%BC%EC%84%B1%EC%A0%84%EC%9E%90_%EC%8B%A4%EC%A0%81_%ED%91%9C-1000.jpg" alt="삼성전자 표"><h2>표2</h2></a>
	<table border="1">
		<caption>2021_2분기_삼성전자_실적_표</caption>
		
		<thead>
			<tr>
				<th rowspan="2" colspan="2">구분</th>
				
				<th colspan="5">2018년</th>
				<th colspan="5">2019년</th>
				<th colspan="5">2018년</th>
				
			</tr>
		
			<tr>
				<th>1Q</th>
				<th>2Q</th>
				<th>3Q</th>
				<th>4Q</th>
				<th>전체</th>
			
				<th>1Q</th>
				<th>2Q</th>
				<th>3Q</th>
				<th>4Q</th>
				<th>전체</th>
			
				<th>1Q</th>
				<th>2Q</th>
				<th>3Q</th>
				<th>4Q</th>
				<th>전체</th>
			</tr>
		</thead>
		<tbody>	
			<tr>
				<td rowspan="7">매출</td>
				<td>계</td>
				<td>60.56</td>
				<td>58.48</td>
				<td>65.46</td>
				<td>59.27</td>
				<td><%= 60.56 + 58.48+65.46+59.27%></td>
				
			</tr>
			
			<tr>
				<td>CE부분</td>
				<td>9.74</td>
				<td>10.4</td>
				<td>10.18</td>
				<td>11.79</td>
				<td><%= 9.74 + 10.4 +10.18+11.79%></td>
				
			</tr>
			
		</tbody>	
	</table>


			<caption>
				: table 의 제목을 나타냄
				: 얘도 table 태그의 내부에 쓰는거 주의

			<tr>
				: table 의 행을 나타냄
				: 행 단위로 셀을 나타내는 태그들을 감싼다
					: 그러니까 td 뿐 아니라 th 도 감싼다
				: Table Row

			<th>
				: table 의 제목"셀"을 나타냄 
					: 그러니까 해당 열의 제목 같은거 들어가고 실제 데이터는 안들어가는 셀들
					: 그러니까 셀이라도 제목 셀이면. <td> 안쓰고, <th> 만 쓰는거.
					: 단순히 젤 윗행의 셀들만 가리는게 아니라 세로 셀도 그런 (?) 제목 셀인 경우 해당 셀은 th 로 생성한다( https://kin.naver.com/qna/detail.naver?d1id=1&dirId=1040205&docId=464133709&scrollTo=answer1# )
					: 기본적으로 텍스트 가운데 정렬 && 굵은 글자 표시된다
				: 속성
					: 사용 tip >> 합치기로 한 부분이면 합침 당하는 셀은 이미 표시한걸로 치는거다.( 그러니까 rowspan="2" 했으면 바로 아랫행의 해당 셀은 생략하고 나머지 셀만 정의하는거고 colspan="2" 했으면 해당 행의 바로 옆 셀은 생략하고 그 뒷 셀만 정의하는거다)
					1. rowspan
						: 행 합치기 (== 아래 방향셀이랑 합치기)
						: 값으로는 몇개의 셀과 합칠것인지 숫자를 (문자열의 꼴로) 할당
						: span ) 가로지르다. 포괄하다 << 합치다 라는 느낌
 
					2. colspan
						: 열 합치기 (== 오른쪽 방향 셀이랑 합치기)
						: 값으로는 몇개의 셀과 합칠것인지 숫자를 (문자열의 꼴로) 할당		
				: Table Head

			<td>
				: table 의 셀을 나타냄
					: 실제로 유의미한 데이터를 나타내는 셀들
				: 속성
					: th 의 속성과 사용방법이 같음
					1. rowspan
						: 행 합치기 (== 아래 방향셀이랑 합치기)
					2. colspan
						: 열 합치기 (== 오른쪽 방향 셀이랑 합치기)
				: Table Data


		


		(6) col
			: (기본) 열 1개 단위로 열의 스타일을 결정
			: void element 라서 닫는 태그 없음 주의
			: 반드시  colgroup 내부에 써야됨
			: 쓸꺼면 모든 열에 대해 col 태그를 명시해야됨
				: 별도로 색깔 너비 같은거 정할 필요없는 열엔 <col> 적는다

			: 반드시 표의 내용이 시작하기 전에 써야됨(== caption 태그가 있다면 caption 태그 바로 다음에 써야됨 )

			: 합침당한열의 경우 해당 열의 젤 앞 셀의 특성을 따른다
			: 속성
				1. style
					:tip >> 문자열 내부의 끝에 모두 세미콜론을 붙인다
					(1) 배경색깔 지정>> "background-color:#색상;" 
						: 색상은 16 진수 형태의 rgb 값을 써야된다.
					(2) 열의 너비 지정>> "width:원하는크기px;"

				2. span
					:  똑같은 스타일을 적용시키고 싶은 열들(바로 뒷 열들의-그러니까 띠엄띠엄 함 안됨)의 갯수 적음
					: ex ) <col><col> == <col span="2">

		(7) colgroup
			: 한테이블의 col 태그를 묶음
			: 반드시 표의 내용이 시작하기 전에 써야됨(== caption 태그가 있다면 caption 태그 바로 다음에 써야됨 )


		(10)표의 구조를 나타내는 sementic 태그
			(1) thead
				: 제목셀 행 전체를 나타냄
					: th 태그들을 감싸는 tr 태그(들)을 thead 가 감싸는꼴
				: Table HEAD

			(2) tbody
				: 데이터셀 행 전체를 나타냄
					: td 태그들을 감싸는 tr 태그들을 tbody 가 감싸는 꼴
				: Table BODY

			(3) tfoot
				: 해당 table 을 요약하는 맨 마지막 행을 나타냄	
					: 그러니까 th 태그들이 아닌 td 태그들을 감싸는 tr 태그 중 가장 마지막 tr 태그(들)을 tfoot 기 감싸는 꼴
					: 전체 데이터 셀 합계 평균 뭐 그런거 나타내는 맨 마지막 행
					: 근데 이런 역할이 없으면 tfoot 시멘틱 태그는 안쓰는거다. 없는데 맨 마지막 행이라고걍 가져다 붙이는게 아니다
			: Table FOOT
		
--------------------------------------------------------------------------------------------------------------------------------------

