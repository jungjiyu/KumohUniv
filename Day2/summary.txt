
'a' 와 "a" 의 기능은 명확히 다르다

심볼릭 상수 >> static fianl 꼴의 변수
리터럴 상수 >> 찐 값

var 타입 >> 타입 생략하고 변수 선언. 컴파일러가 변수 선언과 동시에 받은 초기화 값을 이용하여 타입 추론함
	: var 타입 사용하고 싶으면  바ㄴ드시 초기화 값이 함꼐 주어져야됨


-------------------------------------------------------------------------------------------------------


구조체 swap 하기

-------------------------------------------------------------------------------------------------------

3항연산자 추천

for 뭉느 '0' 번이상, do  while 문은 '1' 번 이상 반복

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

메모리 누수 >>  반환을 하지 않으면 쓸 수 있는 메모리를 다 써서 에러날 수 있다

일반적인 변수의 경우 초기화 하지 않으면 에러가 나지만. malloc 으로 동적할당된 공간의 경우 에러 안난다


동적할당할때 특정 타입의 포인터에 할당하는 것이라 calloc( 할당개수, 크기 ) 할때 크기를 이상하게 줘도 딱히 문제가 생기지 않는다 . 편의상 할당개수와 크기를 나눠서 받는거&& 기본 0 초기화되는거지 , 사실상 malloc(할당개수*크기) 와 동일하다


근데 free( ) 했다고 해서 거기 있는 데이터가 지워지는건 아니다
동적할당하는건 내가 쓰겠다고 확보하는 것. free( ) 를 하면 너도 나도 다 쓸 수 있는 공간ㄴ이 됨.

